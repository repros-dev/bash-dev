#!/bin/bash


function banner_print {

    if [[ -n $1 ]] ; then
        label=" $1 "
    else
        label=""
    fi
    label_width=${#label}


    dashes="---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------"
    if [[ -n $2 ]] ; then
        banner=$(echo $dashes | tr '-' $2)
    else
        banner=$dashes
    fi

    banner_width=${SHELL_NOTEBOOK_BANNER_WIDTH}

    pad_left=$(( ($banner_width-$label_width)/2 ))
    if [[ $pad_left -lt 3 ]] ; then
        pad_left=3
        pad_right=3
    else
        pad_right=$banner_width-$label_width-$pad_left
    fi

    echo "${banner:0:$pad_left}${label}${banner:0:$pad_right}"
}


# use first argument as the cell identifier
cell_id=$1

# ensure presence directory for storing products of cell execution
products_dir=${REPRO_DEMO_OUT_DIRNAME}
mkdir -p ${products_dir}

# create a directory for storing temporary files associated with cell execution
if [[ -n REPRO_DEMO_TMP_DIRNAME ]] ; then
    tmp_dir=${REPRO_DEMO_TMP_DIRNAME}
    mkdir -p ${tmp_dir}
else
    tmp_dir=$(mktemp --tmpdir=/tmp -d bash_dev_XXXXXXX)
fi

# name the temporary files for the cell script and its stdout
cell_script=${tmp_dir}/${cell_id}.sh
cell_stdout=${tmp_dir}/${cell_id}.txt

# copy stdin to the cell script file
cat /dev/null > "${cell_script}"
IFS=''; while read line
do
    echo "$line" >> "${cell_script}"
done

# execute the script and save its output
bash "${cell_script}" > ${cell_stdout}

# print the script and any text it wrote to stdout
banner_print "BASH CELL | ${cell_id}" '='
cat "${cell_script}"
banner_print 'CELL OUTPUTS'
cat ${cell_stdout}
banner_print
echo
echo
